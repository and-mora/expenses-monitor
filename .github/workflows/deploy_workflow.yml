### Action to Deploy on VM

name: Deploy

on:
  workflow_dispatch:
    inputs:
      enabled:
        required: false
        type: string
        default: true
      folder:
        description: 'Component'
        required: true
        default: 'backend'
        type: choice
        options:
          - grafana
          - backend
          - frontend
      version:
        description: 'Tag'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      enabled:
        required: true
        type: string
        default: false
      folder:
        required: true
        type: string
    secrets:
      VM_HOST:
        required: true
      VM_USERNAME:
        required: true
      VM_PRIVATE_KEY:
        required: true
      VM_PORT:
        required: true

jobs:

  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    if: inputs.enabled == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 #v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 #v3.0.0

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc #v2.2.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push Docker image
        id: docker_build_push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 #v5.0.0
        with:
          context: ${{ inputs.folder }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.folder }}-latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:${{ inputs.version }}
          platforms: linux/amd64,linux/arm64

      - name: 'Deploy on docker in VM'
        uses: appleboy/ssh-action@55dabf81b49d4120609345970c91507e2d734799
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          port: ${{ secrets.VM_PORT }}
          fingerprint: ${{ secrets.HOST_FINGERPRINT }}
          script: |
            mkdir -p expenses-monitor/${{ inputs.folder }}
            cd expenses-monitor/${{ inputs.folder }}
            wget -O docker-compose.yml https://raw.githubusercontent.com/and-mora/expenses-monitor/${{ inputs.version }}/${{ inputs.folder }}/docker-compose.yml
            sudo tag=${{ inputs.version }} docker stack deploy --compose-file docker-compose.yml ${{ inputs.folder }}
