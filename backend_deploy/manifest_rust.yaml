apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: backend-rust
  name: backend-rust
  namespace: expenses-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-rust
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend-rust
    spec:
      containers:
        - image: 'ghcr.io/and-mora/expenses-monitor:v0.9.1-backend'
          name: expenses-monitor
          env:
            - name: DB_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: db-connection-string
                  key: connection-string
#            - name: DB_BACKEND_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: backend-db-credentials
#                  key: postgres-password
#            - name: DB_BACKEND_USER
#              valueFrom:
#                secretKeyRef:
#                  name: backend-db-credentials
#                  key: postgres-username
#            - name: BASIC_AUTH_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: backend-user-credentials
#                  key: user-password
#            - name: BASIC_AUTH_USERNAME
#              valueFrom:
#                secretKeyRef:
#                  name: backend-user-credentials
#                  key: user-username
#            - name: FRONTEND_ORIGIN_URL
#              value: "https://expmonitor.freeddns.org"
#            - name: OTEL_EXPORTER_OTLP_ENDPOINT
#              valueFrom:
#                configMapKeyRef:
#                  name: backend-config
#                  key: OTEL_EXPORTER_OTLP_ENDPOINT
#            - name: OTEL_SERVICE_NAME
#              valueFrom:
#                configMapKeyRef:
#                  name: backend-config
#                  key: OTEL_SERVICE_NAME
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "200Gi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 90
            failureThreshold: 15
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 90
            failureThreshold: 15
            periodSeconds: 10
      automountServiceAccountToken: false

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend-rust
  name: backend-rust
  namespace: expenses-monitor
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: backend-rust
  sessionAffinity: None
  type: ClusterIP

---

#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  annotations:
#    cert-manager.io/cluster-issuer: letsencrypt
#  generation: 1
#  name: backend
#  namespace: expenses-monitor
#spec:
#  ingressClassName: public
#  rules:
#    - host: api.expmonitor.freeddns.org
#      http:
#        paths:
#          - backend:
#              service:
#                name: backend
#                port:
#                  number: 8080
#            path: /
#            pathType: Prefix
#  tls:
#    - hosts:
#      - api.expmonitor.freeddns.org
#      secretName: backend-tls
