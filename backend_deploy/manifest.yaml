apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: backend
  name: backend
  namespace: expenses-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
    spec:
      volumes:
        - name: tls-secret
          secret:
            secretName: backend-tls
      containers:
        - image: 'ghcr.io/and-mora/expenses-monitor:v0.8.7-backend'
          name: expenses-monitor
          env:
            - name: DB_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: db-connection-string
                  key: connection-string
            - name: DB_BACKEND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-db-credentials
                  key: postgres-password
            - name: DB_BACKEND_USER
              valueFrom:
                secretKeyRef:
                  name: backend-db-credentials
                  key: postgres-username
            - name: BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-user-credentials
                  key: user-password
            - name: BASIC_AUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: backend-user-credentials
                  key: user-username
          resources:
            requests:
              memory: "512Mi"
              cpu: "50m"
            limits:
              memory: "756Gi"
              cpu: "150m"
          volumeMounts:
            - name: tls-secret
              readOnly: true
              mountPath: "/tls"
      automountServiceAccountToken: false

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: expenses-monitor
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: backend
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  generation: 1
  name: backend
  namespace: expenses-monitor
spec:
  ingressClassName: public
  rules:
    - host: api.expmonitor.freeddns.org
      http:
        paths:
          - backend:
              service:
                name: backend
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
    - hosts:
      - api.expmonitor.freeddns.org
      secretName: backend-tls
