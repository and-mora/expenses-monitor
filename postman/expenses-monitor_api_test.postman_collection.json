{
	"info": {
		"_postman_id": "0ee02d7a-fa43-476e-bcae-292c6e24b5ba",
		"name": "Local expenses-monitor integration test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29890959"
	},
	"item": [
		{
			"name": "00a. Unauthorized access",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('00a. Unauthorized access', () => {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host_name}}/api/balance",
					"host": [
						"{{host_name}}"
					],
					"path": [
						"api",
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "00b. Token with client-credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('00b. Login successfully', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.collectionVariables.set(\"token\", pm.response.json()[\"access_token\"]);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{CLIENT_ID}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{CLIENT_SECRET}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://auth.expmonitor.freeddns.org/realms/expenses-monitor/protocol/openid-connect/token",
					"protocol": "https",
					"host": [
						"auth",
						"expmonitor",
						"freeddns",
						"org"
					],
					"path": [
						"realms",
						"expenses-monitor",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "01. Get balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('01. Get balance', () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host_name}}/api/balance",
					"host": [
						"{{host_name}}"
					],
					"path": [
						"api",
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "02. Add a payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var paymentId;",
							"pm.test('02. Add a payment', () => {",
							"    pm.response.to.have.status(200);",
							"    // retrieve payment id",
							"    paymentId = pm.response.json().id;",
							"});",
							"var walletId = pm.environment.get(\"volatileWalletId\");",
							"",
							"_.deletePayment(pm, paymentId);",
							"_.deleteWallet(pm, walletId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"_.addWallet(pm, \"testWallet\", function(res) {",
							"    var walletId = res.json().id;",
							"    pm.environment.set(\"volatileWalletId\", walletId);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"spesa\",\n    \"amount\": -63,\n    \"merchantName\": \"Poli\",\n    \"accountingDate\": \"2023-11-13T00:00:00.000\",\n    \"wallet\": \"testWallet\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host_name}}/api/payments",
					"host": [
						"{{host_name}}"
					],
					"path": [
						"api",
						"payments"
					]
				}
			},
			"response": []
		},
		{
			"name": "03. Add a wallet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var walletId;",
							"pm.test('03. Add a wallet', () => {",
							"    pm.response.to.have.status(200);",
							"    // retrieve wallet id",
							"    walletId = pm.response.json().id;",
							"});",
							"",
							"_.deleteWallet(pm, walletId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"testwallet\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host_name}}/api/wallets",
					"host": [
						"{{host_name}}"
					],
					"path": [
						"api",
						"wallets"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"Object.prototype.deletePayment = (that, paymentId) => {",
					"    return that.sendRequest({",
					"        url: `${pm.environment.get('host_name')}/api/payment/${paymentId}`,",
					"        method: 'DELETE',",
					"        header: {",
					"            'Authorization': `Bearer ${pm.collectionVariables.get('token')}`",
					"        },",
					"    });",
					"};",
					"",
					"Object.prototype.deleteWallet = (that, walletId) => {",
					"    return that.sendRequest({",
					"        url: `${pm.environment.get('host_name')}/api/wallets/${walletId}`,",
					"        method: 'DELETE',",
					"        header: {",
					"            'Authorization': `Bearer ${pm.collectionVariables.get('token')}`",
					"        },",
					"    });",
					"};",
					"",
					"Object.prototype.addWallet = (that, name, callback) => {",
					"    return that.sendRequest({",
					"        url: `${pm.environment.get('host_name')}/api/wallets`,",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/json',",
					"            'Authorization': `Bearer ${pm.collectionVariables.get('token')}`",
					"        },",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({",
					"                name: `${name}`",
					"            })",
					"        }",
					"    }, function (err, res) {",
					"        if (callback) {",
					"            callback(res);",
					"        }",
					"    });",
					"};",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}